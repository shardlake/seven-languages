class Tree
  attr_accessor :children, :node_name

  def initialize(tree={})

    # tree should just have one key/value pair so use [0]
    @node_name = tree.keys[0]

    # may or may not have children so set an empty array
    @children = []

    if !tree.values[0].empty? 
      tree.values[0].each do |key, value| 
         hash={}
         hash[key]=value
         @children.push (Tree.new(hash))
      end
    end
    
  end

  def visit_all(&block)
    visit &block
    children.each {|c| c.visit_all &block}
  end

  def visit(&block)
    block.call self
  end

end

ruby_tree = Tree.new({'grandpa' => {'dad' => {'child 1' => {}, 'child 2' => {}}, 'uncle' => {'child3' => {}}}})

puts "Visiting a Node"
ruby_tree.visit {|node| puts node.node_name}
puts

puts "Visiting entire tree"
ruby_tree.visit_all {|node| puts node.node_name}

